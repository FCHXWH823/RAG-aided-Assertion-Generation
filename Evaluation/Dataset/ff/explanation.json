{
  "Assertion 1": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (rst)",
    "logical expression": "en |=> out == $past(in,1)",
    "Signals": ["en", "out", "in"],
    "Signal Explanations": {
      "en": "enable signal",
      "out": "output signal of the verilog module",
      "in": "input signal of the verilog module"
    },
    "Logical Operators": ["|=>", "==", "$past"],
    "Logical Operators Explanation": {
      "|=>": "if the conditions on the left are met then the condition on the right must hold SINCE NEXT CLOCK CYCLE",
      "==": "equal",
      "$past": "the value of the signal in the specified previous clock cycle(s)"
    },
    "Assertion Explaination": "if enable signal is set (1), output signal equals the last one clock cycle's input signal SINCE NEXT CLOCK CYCLE"
  },
  "Assertion 2": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (rst)",
    "logical expression": "!en |=> out == $past(out,1)",
    "Signals": ["en", "out"],
    "Signal Explanations": {
      "en": "enable signal",
      "out": "output signal of the verilog module"
    },
    "Logical Operators": ["!", "|=>", "==", "$past"],
    "Logical Operators Explanation": {
      "!": "the value of a signal is reset (0)",
      "|=>": "if the conditions on the left are met then the condition on the right must hold SINCE NEXT CLOCK CYCLE",
      "==": "equal",
      "$past": "the value of the signal in the specified previous clock cycle(s)"
    },
    "Assertion Explaination": "if enable signal is reset (0), output signal equals the last one clock cycle's output signal SINCE NEXT CLOCK CYCLE"
  }
}