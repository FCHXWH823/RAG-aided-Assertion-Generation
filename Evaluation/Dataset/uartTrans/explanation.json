{
  "Assertion 1": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "none",
    "logical expression": "(txNext == 0) |=> (tx == 0)",
    "Signals": ["txNext", "tx"],
    "Signal Explanations": {
      "txNext": "the signal that holds the next value intended for transmission in the UART state machine",
      "tx": "the output bit-stream signal generated from the internal transmission register"
    },
    "Logical Operators": ["==", "|=>"],
    "Logical Operators Explanation": {
      "==": "equal",
      "|=>": "if the condition on the left is met then the condition on the right must hold SINCE THE NEXT CLOCK CYCLE"
    },
    "Assertion Explaination": "if the signal that holds the next value intended for transmission equals 0 then the output bit-stream signal equals 0 SINCE THE NEXT CLOCK CYCLE"
  },
  "Assertion 2": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "none",
    "logical expression": "(txNext == 1) |=> (tx == 1)",
    "Signals": ["txNext", "tx"],
    "Signal Explanations": {
      "txNext": "the signal that holds the next value intended for transmission in the UART state machine",
      "tx": "the output bit-stream signal generated from the internal transmission register"
    },
    "Logical Operators": ["==", "|=>"],
    "Logical Operators Explanation": {
      "==": "equal",
      "|=>": "if the condition on the left is met then the condition on the right must hold SINCE THE NEXT CLOCK CYCLE"
    },
    "Assertion Explaination": "if the signal that holds the next value intended for transmission equals 1 then the output bit-stream signal equals 1 SINCE THE NEXT CLOCK CYCLE"
  },
  "Assertion 3": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "none",
    "logical expression": "(stateReg[0] == 1) |-> (txDoneTick == 0)",
    "Signals": ["stateReg[0]", "txDoneTick"],
    "Signal Explanations": {
      "stateReg[0]": "the least significant bit of the state register in the UART FSM, indicating a particular state condition",
      "txDoneTick": "the signal indicating a transmission done tick, used as a read signal to the FIFO"
    },
    "Logical Operators": ["==", "|->"],
    "Logical Operators Explanation": {
      "==": "equal",
      "|->": "if the condition on the left is met then the condition on the right must hold SINCE THE CURRENT CLOCK CYCLE"
    },
    "Assertion Explaination": "if the least significant bit of the state register is set then the transmission done tick signal equals 0 SINCE THE CURRENT CLOCK CYCLE"
  },
  "Assertion 4": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "none",
    "logical expression": "(txStart == 0) |-> (txDoneTick == 0)",
    "Signals": ["txStart", "txDoneTick"],
    "Signal Explanations": {
      "txStart": "the signal used to initiate the transmission in the UART module",
      "txDoneTick": "the signal indicating that a transmission completion event (or read request) has occurred"
    },
    "Logical Operators": ["==", "|->"],
    "Logical Operators Explanation": {
      "==": "equal",
      "|->": "if the condition on the left is met then the condition on the right must hold SINCE THE CURRENT CLOCK CYCLE"
    },
    "Assertion Explaination": "if the signal used to initiate the transmission is reset (0) then the transmission done tick signal equals 0 SINCE THE CURRENT CLOCK CYCLE"
  }
}