{
  "Assertion 1": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (rst)",
    "logical expression": "valid_wr |-> !full",
    "Signals": ["valid_wr", "full"],
    "Signal Explanations": {
      "valid_wr": "derived valid write signal, defined as wr_en && !full",
      "full": "output signal indicating FIFO is full"
    },
    "Logical Operators": ["|->", "!"],
    "Logical Operators Explanation": {
      "|->": "an overlapping implication operator meaning that if the conditions on the left are met then the condition on the right must hold SINCE THE SAME CLOCK CYCLE",
      "!": "the value of a signal is reset (0)"
    },
    "Assertion Explaination": "when the derived valid write signal is set (1), then the FIFO full indicator is reset (0) from the current clock cycle"
  },
  "Assertion 2": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (rst)",
    "logical expression": "valid_rd |-> !empty",
    "Signals": ["valid_rd", "empty"],
    "Signal Explanations": {
      "valid_rd": "derived valid read signal, defined as rd_en && !empty",
      "empty": "output signal indicating FIFO is empty"
    },
    "Logical Operators": ["|->", "!"],
    "Logical Operators Explanation": {
      "|->": "an overlapping implication operator meaning that if the conditions on the left are met then the condition on the right must hold SINCE THE SAME CLOCK CYCLE",
      "!": "the value of a signal is reset (0)"
    },
    "Assertion Explaination": "when the derived valid read signal is set (1), then the FIFO empty indicator is reset (0) from the current clock cycle"
  }
}