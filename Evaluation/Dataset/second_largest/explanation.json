{
  "Assertion 1": {
    "clock signal condition": "None",
    "disable condition": "None",
    "logical expression": "(max_q == 0 & max2_q == 0) | (max2_q < max_q)",
    "Signals": [
      "max_q",
      "max2_q"
    ],
    "Signal Explanations": {
      "max_q": "the register holding the largest value seen so far",
      "max2_q": "the register holding the second largest value seen so far"
    },
    "Logical Operators": [
      "==",
      "&",
      "|",
      "<"
    ],
    "Logical Operators Explanation": {
      "==": "equal to",
      "&": "logical AND; both conditions must hold simultaneously",
      "|": "logical OR; at least one of the conditions must hold",
      "<": "less than"
    },
    "Assertion Explaination": "Either the register holding the largest value is equal to zero and the register holding the second largest value is equal to zero at the same time, OR the register holding the second largest value is less than the register holding the largest value"
  },
  "Assertion 2": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "None",
    "logical expression": "(max_q == 0) | (max_q > max2_q)",
    "Signals": [
      "max_q",
      "max2_q"
    ],
    "Signal Explanations": {
      "max_q": "the register holding the largest value seen so far",
      "max2_q": "the register holding the second largest value seen so far"
    },
    "Logical Operators": [
      "==",
      "|",
      ">"
    ],
    "Logical Operators Explanation": {
      "==": "equal to",
      "|": "logical OR; at least one of the conditions must hold",
      ">": "greater than"
    },
    "Assertion Explaination": "Either the register holding the largest value is equal to zero, OR the register holding the largest value is greater than the register holding the second largest value, where the check is made on each positive clock edge"
  },
  "Assertion 3": {
    "clock signal condition": "@(posedge clk) within the active reset branch",
    "disable condition": "None",
    "logical expression": "max_q == 0",
    "Signals": [
      "max_q"
    ],
    "Signal Explanations": {
      "max_q": "the register holding the largest value seen so far"
    },
    "Logical Operators": [
      "=="
    ],
    "Logical Operators Explanation": {
      "==": "equal to"
    },
    "Assertion Explaination": "The register holding the largest value is equal to zero at the positive clock edge when in the active reset branch"
  },
  "Assertion 4": {
    "clock signal condition": "@(posedge clk) within the active reset branch",
    "disable condition": "None",
    "logical expression": "din != dout",
    "Signals": [
      "din",
      "dout"
    ],
    "Signal Explanations": {
      "din": "the input data of the module",
      "dout": "the module's output representing the second largest value"
    },
    "Logical Operators": [
      "!="
    ],
    "Logical Operators Explanation": {
      "!=": "not equal to"
    },
    "Assertion Explaination": "The input data is not equal to the output representing the second largest value at the positive clock edge within the active reset branch"
  },
  "Assertion 5": {
    "clock signal condition": "@(posedge clk) within the active reset branch",
    "disable condition": "None",
    "logical expression": "max_q > max2_q",
    "Signals": [
      "max_q",
      "max2_q"
    ],
    "Signal Explanations": {
      "max_q": "the register holding the largest value seen so far",
      "max2_q": "the register holding the second largest value seen so far"
    },
    "Logical Operators": [
      ">"
    ],
    "Logical Operators Explanation": {
      ">": "greater than"
    },
    "Assertion Explaination": "The register holding the largest value is greater than the register holding the second largest value at the positive clock edge within the active reset branch"
  },
  "Assertion 6": {
    "clock signal condition": "@(posedge clk) within the active reset branch",
    "disable condition": "None",
    "logical expression": "new_max",
    "Signals": [
      "new_max"
    ],
    "Signal Explanations": {
      "new_max": "a boolean signal indicating that the current input data is greater than the currently stored largest value"
    },
    "Logical Operators": [],
    "Logical Operators Explanation": {},
    "Assertion Explaination": "The boolean indicator that a new largest value has been detected is true at the positive clock edge within the active reset branch"
  },
  "Assertion 7": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "None",
    "logical expression": "resetn",
    "Signals": [
      "resetn"
    ],
    "Signal Explanations": {
      "resetn": "the active-low reset signal indicating that the system is not in reset when asserted (logic high)"
    },
    "Logical Operators": [],
    "Logical Operators Explanation": {},
    "Assertion Explaination": "The active-low reset signal is in the asserted state (logic high), indicating that the system is not in reset, checked on each positive clock edge"
  },
  "Assertion 8": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (~resetn)",
    "logical expression": "(max_q == 0) | (max_q > max2_q)",
    "Signals": [
      "max_q",
      "max2_q",
      "resetn"
    ],
    "Signal Explanations": {
      "max_q": "the register holding the largest value seen so far",
      "max2_q": "the register holding the second largest value seen so far",
      "resetn": "the active-low reset signal indicating the system's reset state"
    },
    "Logical Operators": [
      "==",
      "|",
      ">"
    ],
    "Logical Operators Explanation": {
      "==": "equal to",
      "|": "logical OR; at least one of the conditions must hold",
      ">": "greater than"
    },
    "Assertion Explaination": "When the system is not in reset (i.e. the active-low reset signal is not asserted), on each positive clock edge either the register holding the largest value is equal to zero or it is greater than the register holding the second largest value"
  }
}