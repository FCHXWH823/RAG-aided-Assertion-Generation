{
  "Assertion 1": {
    "clock signal condition": "@(posedge clk)",
    "disable condition": "disable iff (~resetn)",
    "logical expression": "unused_bin_inc | $onehot(gray_next ^ gray_q)",
    "Signals": [
      "unused_bin_inc",
      "gray_next",
      "gray_q"
    ],
    "Signal Explanations": {
      "unused_bin_inc": "a signal representing the carry-out from the binary increment, which is not used in subsequent logic",
      "gray_next": "the next Gray code computed from the binary counter's value using Gray code conversion",
      "gray_q": "the current Gray code stored in the register"
    },
    "Logical Operators": [
      "|",
      "$onehot",
      "^"
    ],
    "Logical Operators Explanation": {
      "|": "OR operator that yields true if at least one of the operands is true",
      "$onehot": "a function that verifies that exactly one bit in its operand is set to 1",
      "^": "XOR operator returning 1 if the compared bits differ and 0 if they are the same"
    },
    "Assertion Explaination": "if the signal representing the carry-out from the binary increment is set OR the function that verifies exactly one bit is active in the result of the bitwise XOR between the next Gray code value and the current Gray code value holds true"
  }
}